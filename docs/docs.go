// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://github.com/your-org/go-chat",
            "email": "support@gochat.dev"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/audit": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get audit logs with optional filtering (system admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audit Logs"
                ],
                "summary": "Get audit logs with filtering",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by channel ID",
                        "name": "channel_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by actor ID",
                        "name": "actor_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by action type",
                        "name": "action",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page (default: 20, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Audit logs retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.AuditLogsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Admin access required",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/channels": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get a list of all publicly visible channels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channels"
                ],
                "summary": "Get all visible channels",
                "responses": {
                    "200": {
                        "description": "List of visible channels",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ChannelsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Create a new channel with optional password protection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channels"
                ],
                "summary": "Create a new channel",
                "parameters": [
                    {
                        "description": "Create channel request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api.CreateChannelRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Channel created successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ChannelResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/channels/me": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get all channels the authenticated user has joined",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channels"
                ],
                "summary": "Get user's channels",
                "responses": {
                    "200": {
                        "description": "List of user's channels",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ChannelsResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/channels/{id}": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get detailed information about a specific channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channels"
                ],
                "summary": "Get channel details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channel details",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ChannelResponse"
                        }
                    },
                    "400": {
                        "description": "Channel ID required",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Channel not found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Delete a channel (only channel owner can delete)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channels"
                ],
                "summary": "Delete a channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channel deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request or not authorized",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/channels/{id}/audit": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get audit logs for a specific channel (only channel owners can view)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Audit Logs"
                ],
                "summary": "Get channel audit logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page (default: 20, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Audit logs retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.AuditLogsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Only channel owners can view audit logs",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Channel not found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/channels/{id}/ban": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Permanently ban a user from a channel (only channel owner can ban)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel Administration"
                ],
                "summary": "Ban user from channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Ban user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api.BanUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User banned successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Only channel owner can ban users",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/channels/{id}/ban/{userId}": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Remove a ban from a user, allowing them to rejoin the channel (only channel owner can unban)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel Administration"
                ],
                "summary": "Unban user from channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID to unban",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User unbanned successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Only channel owner can unban users",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/channels/{id}/bans": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get a list of all active and inactive bans for a channel (only channel owner can view)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel Administration"
                ],
                "summary": "Get channel bans",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of channel bans",
                        "schema": {
                            "$ref": "#/definitions/internal_api.BansResponse"
                        }
                    },
                    "400": {
                        "description": "Channel ID required",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Only channel owner can view bans",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/channels/{id}/demote": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Demote a user to a lower role in the channel (only channel owners can demote)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel Administration"
                ],
                "summary": "Demote user in channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api.RoleUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User demoted successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Only channel owners can demote users",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Channel or user not found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/channels/{id}/join": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Join a channel, optionally providing password for protected channels",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channels"
                ],
                "summary": "Join a channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Join channel request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api.JoinChannelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully joined channel",
                        "schema": {
                            "$ref": "#/definitions/internal_api.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request or incorrect password",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/channels/{id}/leave": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Leave a channel that the user has previously joined",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channels"
                ],
                "summary": "Leave a channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully left channel",
                        "schema": {
                            "$ref": "#/definitions/internal_api.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/channels/{id}/messages": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get paginated message history for a channel (only for channel members)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Get channel message history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of messages to retrieve (default: 50, max: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of messages to skip (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Get messages before this message ID",
                        "name": "before",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.MessagesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "You are not a member of this channel",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Channel not found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/channels/{id}/promote": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Promote a user to a higher role in the channel (only channel owners can promote)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel Administration"
                ],
                "summary": "Promote user in channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api.RoleUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User promoted successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Only channel owners can promote users",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Channel or user not found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/channels/{id}/tempban": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Temporarily ban a user from a channel for a specified duration (only channel owner can ban)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel Administration"
                ],
                "summary": "Temporarily ban user from channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Temporary ban user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api.TempBanUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User temporarily banned successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request or invalid duration format",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Only channel owner can ban users",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/channels/{id}/users": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get a list of all users in a specific channel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channels"
                ],
                "summary": "Get channel users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of channel users",
                        "schema": {
                            "$ref": "#/definitions/internal_api.UsersResponse"
                        }
                    },
                    "400": {
                        "description": "Channel ID required",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Logout user and clear authentication cookies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.MessageResponse"
                        }
                    }
                }
            }
        },
        "/api/refresh_token": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Refresh JWT token using refresh token from cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh JWT token",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.MessageResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid or missing refresh token",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/search/channels": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Search for visible channels by name (partial matching)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search channels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query (minimum 2 characters)",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of results to return (default: 20, max: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Channels found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ChannelsSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid query",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/search/messages": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Search for messages within a specific channel (only for channel members)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query (minimum 2 characters)",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Channel ID to search within",
                        "name": "channel_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of results to return (default: 20, max: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.MessagesSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid query or channel_id",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "You are not a member of this channel",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Channel not found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/search/users": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Search for users by username (partial matching)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query (minimum 2 characters)",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of results to return (default: 20, max: 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.UsersSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid query",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user": {
            "delete": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Soft delete user account and clear authentication cookies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Delete user account",
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.MessageResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Update user username and/or password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Update user information",
                "parameters": [
                    {
                        "description": "Update user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.UpdateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request or username already exists",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/channels/joined": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get all channels the authenticated user has joined",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Get joined channels",
                "responses": {
                    "200": {
                        "description": "List of joined channels",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ChannelsResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/channels/owned": {
            "get": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Get all channels owned by the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Management"
                ],
                "summary": "Get owned channels",
                "responses": {
                    "200": {
                        "description": "List of owned channels",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ChannelsResponse"
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hc": {
            "get": {
                "description": "Check if the server is running and responsive",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Running",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate user with username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api.UserLoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register a new user with username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_api.UserRegisterInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/internal_api.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/internal_api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_api.AuditLogResponse": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "BAN_USER"
                },
                "actor": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "example": "abc12345"
                        },
                        "username": {
                            "type": "string",
                            "example": "admin_user"
                        }
                    }
                },
                "actor_id": {
                    "type": "string",
                    "example": "abc12345"
                },
                "channel": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "example": "xyz123"
                        },
                        "name": {
                            "type": "string",
                            "example": "general"
                        }
                    }
                },
                "channel_id": {
                    "type": "string",
                    "example": "xyz123"
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Banned user from channel"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "target": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "example": "def67890"
                        },
                        "username": {
                            "type": "string",
                            "example": "banned_user"
                        }
                    }
                },
                "target_id": {
                    "type": "string",
                    "example": "def67890"
                }
            }
        },
        "internal_api.AuditLogsResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_api.AuditLogResponse"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "internal_api.AuthResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Register successful"
                },
                "user": {
                    "$ref": "#/definitions/internal_api.UserResponse"
                }
            }
        },
        "internal_api.BanInfo": {
            "type": "object",
            "properties": {
                "banned_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "banned_by": {
                    "$ref": "#/definitions/internal_api.UserInfo"
                },
                "expires_at": {
                    "type": "string",
                    "example": "2023-01-02T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "reason": {
                    "type": "string",
                    "example": "spam"
                },
                "user": {
                    "$ref": "#/definitions/internal_api.UserInfo"
                },
                "user_id": {
                    "type": "string",
                    "example": "a1b2c3d4"
                }
            }
        },
        "internal_api.BanUserRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "reason": {
                    "type": "string",
                    "example": "spam"
                },
                "user_id": {
                    "type": "string",
                    "example": "a1b2c3d4"
                }
            }
        },
        "internal_api.BansResponse": {
            "type": "object",
            "properties": {
                "bans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_api.BanInfo"
                    }
                }
            }
        },
        "internal_api.ChannelInfo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "ch123"
                },
                "is_visible": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "general"
                },
                "owner": {
                    "$ref": "#/definitions/internal_api.ChannelOwner"
                }
            }
        },
        "internal_api.ChannelOwner": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "a1b2c3d4"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "internal_api.ChannelResponse": {
            "type": "object",
            "properties": {
                "channel": {
                    "$ref": "#/definitions/internal_api.ChannelInfo"
                }
            }
        },
        "internal_api.ChannelSearchResult": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "is_visible": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "internal_api.ChannelsResponse": {
            "type": "object",
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_api.ChannelInfo"
                    }
                }
            }
        },
        "internal_api.ChannelsSearchResponse": {
            "type": "object",
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_api.ChannelSearchResult"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "internal_api.CreateChannelRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "is_visible": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "general"
                },
                "password": {
                    "type": "string",
                    "example": "secretpass"
                }
            }
        },
        "internal_api.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "username cannot be empty"
                }
            }
        },
        "internal_api.JoinChannelRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "secretpass"
                }
            }
        },
        "internal_api.MessageInfo": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "internal_api.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Logged out"
                }
            }
        },
        "internal_api.MessageSearchResult": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "internal_api.MessagesResponse": {
            "type": "object",
            "properties": {
                "has_more": {
                    "type": "boolean"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_api.MessageInfo"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "internal_api.MessagesSearchResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_api.MessageSearchResult"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "internal_api.RoleUpdateRequest": {
            "type": "object",
            "required": [
                "role",
                "user_id"
            ],
            "properties": {
                "role": {
                    "type": "string",
                    "example": "Moderator"
                },
                "user_id": {
                    "type": "string",
                    "example": "abc12345"
                }
            }
        },
        "internal_api.TempBanUserRequest": {
            "type": "object",
            "required": [
                "duration",
                "user_id"
            ],
            "properties": {
                "duration": {
                    "description": "e.g., \"24h\", \"30m\"",
                    "type": "string",
                    "example": "24h"
                },
                "reason": {
                    "type": "string",
                    "example": "timeout"
                },
                "user_id": {
                    "type": "string",
                    "example": "a1b2c3d4"
                }
            }
        },
        "internal_api.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "newPassword123"
                },
                "username": {
                    "type": "string",
                    "example": "new_username"
                }
            }
        },
        "internal_api.UpdateUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User updated successfully"
                },
                "user": {
                    "$ref": "#/definitions/internal_api.UserResponse"
                }
            }
        },
        "internal_api.UserInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "a1b2c3d4"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "internal_api.UserLoginInput": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "securePassword123"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "internal_api.UserRegisterInput": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "securePassword123"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "internal_api.UserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "a1b2c3d4"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "internal_api.UserSearchResult": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "internal_api.UsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_api.UserInfo"
                    }
                }
            }
        },
        "internal_api.UsersSearchResponse": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_api.UserSearchResult"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "CookieAuth": {
            "description": "JWT token stored in HTTP-only cookie",
            "type": "apiKey",
            "name": "token",
            "in": "cookie"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9876",
	BasePath:         "/",
	Schemes:          []string{"https"},
	Title:            "Go Chat API",
	Description:      "A real-time chat server with JWT authentication, channel management, and WebSocket support",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
